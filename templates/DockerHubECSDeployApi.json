{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "Code": {
      "Type": "String",
      "Description": "Python 2.7 Lambda code to handle DockerHub webhooks."
    }
  },

  "Resources": {
    "APIDeployment": {
      "Type" : "AWS::ApiGateway::Deployment",
      "Properties" : {
	"Description" : "Deployment of the Dockerhub webhook CD endpoint.",
	"RestApiId" : { "Ref": "API" },
	"StageName" : "production"
      }
    },

    "API": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
	"Description": "API accepting DockerHub push webhooks.",
	"Name": "DockerHubECSDeployAPI"
      }
    },

    "DockerHubWebhookMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
	"RestApiId": { "Ref": "API" },
	"ResourceId": { "Fn::GetAtt": [ "API", "RootResourceId" ] },
	"HttpMethod": "POST",
	"AuthorizationType": "NONE",
	"Integration": {
	  "Type": "AWS",
	  "IntegrationHttpMethod": "POST",
	  "Uri": { "Fn::Join": [ "", [
	    "arn:aws:apigateway:",
	    { "Ref": "AWS::Region" },
	    ":lambda:path/2015-03-31/functions/",
	    { "Fn::GetAtt": [ "ECSDeployLambda", "Arn" ] },
	    "/invocations"
	  ] ] }
	}
      }
    },

    "LambdaApiGatewayPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
	"Action": "lambda:InvokeFunction",
	"FunctionName": { "Fn::GetAtt": [ "ECSDeployLambda", "Arn" ] },
	"Principal": "apigateway.amazonaws.com"
      }
    },

    "ECSDeployLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
	"Code": {
	  "ZipFile": { "Ref": "Code" }
	},
	"Description": "A function that takes a DockerHub webhook and redeploys all services running the updated image",
	"FunctionName": "DeployDockerHubImage",
	"Handler": "index.handler",
	"MemorySize": 128,
	"Role": { "Fn::GetAtt": [ "LambdaRole", "Arn" ] },
	"Runtime": "python2.7",
	"Timeout": 10
      }
    },

    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "DockerHub-ECS-Deploy-Policy",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
		    "ecs:DescribeServices",
		    "ecs:DescribeTaskDefinition",
		    "ecs:ListClusters",
		    "ecs:ListServices",
		    "ecs:RegisterTaskDefinition",
		    "ecs:UpdateService"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    }
  }
}
